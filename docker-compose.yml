version: '3.8'

services:
  backend:
    build: .
    ports:
      - "8082:8082"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=character-demo
      - AI_SERVICE_URL=http://ai_layer:5000
      - REDIS_URL=redis:6379
    depends_on:
      - postgres
      - redis
      - ai_layer
    networks:
      - backend_network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=character-demo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - backend_network

  redis:
    image: redis:8.0-alpine
    ports:
      - "6379:6379"
    networks:
      - backend_network

  ai_layer:
    build:
      context: ../AI_Layer2
      dockerfile: Dockerfile
    environment:
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - AZURE_LLAMA_ENDPOINT=${AZURE_LLAMA_ENDPOINT}
      - AZURE_API_KEY=${AZURE_API_KEY}
      - AZURE_MODEL_NAME=${AZURE_MODEL_NAME}
    ports:
      - "5000:5000"
    networks:
      - backend_network

networks:
  backend_network:
    driver: bridge

volumes:
  postgres_data: